// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: jyncrcExmd4vsfVgQ1hNS1
// Component: K6v-ffSzsXvL

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Button from "../../Button"; // plasmic-import: LQlWPPLDikt_/component
import Footer from "../../Footer"; // plasmic-import: 5LfpYpAFTDMw/component

import { useScreenVariants as useScreenVariantsic8SJnshfjSw } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: ic8sJnshfjSW/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: jyncrcExmd4vsfVgQ1hNS1/projectcss
import sty from "./PlasmicHome.module.css"; // plasmic-import: K6v-ffSzsXvL/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: ZcCZyBPNXlP7/icon
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: daVZAlYnKUB4/icon

createPlasmicElementProxy;

export type PlasmicHome__VariantMembers = {};
export type PlasmicHome__VariantsArgs = {};
type VariantPropType = keyof PlasmicHome__VariantsArgs;
export const PlasmicHome__VariantProps = new Array<VariantPropType>();

export type PlasmicHome__ArgsType = {};
type ArgPropType = keyof PlasmicHome__ArgsType;
export const PlasmicHome__ArgProps = new Array<ArgPropType>();

export type PlasmicHome__OverridesType = {
  root?: Flex__<"div">;
  h1?: Flex__<"h1">;
  h2?: Flex__<"h2">;
  columns?: Flex__<"div">;
  footer?: Flex__<typeof Footer>;
};

export interface DefaultHomeProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHome__RenderFunc(props: {
  variants: PlasmicHome__VariantsArgs;
  args: PlasmicHome__ArgsType;
  overrides: PlasmicHome__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsic8SJnshfjSw()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__vH9S)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__tiRkW)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__yBfk)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___3Gn5L)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___1PhCg)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__iLncT)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___0XCus
                        )}
                      >
                        <h1
                          data-plasmic-name={"h1"}
                          data-plasmic-override={overrides.h1}
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1
                          )}
                        >
                          {"Disfruta el sabor del verano"}
                        </h1>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__pmCgP
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gOqaX
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt "
                            : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."}
                        </div>
                      </div>
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__vuVnm
                        )}
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vBUqo
                          )}
                        >
                          {"Buy Now"}
                        </div>
                      </Button>
                    </Stack__>
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__unYaV)}
                    displayHeight={"auto"}
                    displayMaxHeight={"900px"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/new_eat_landing/images/image4.jpg",
                      fullWidth: 4096,
                      fullHeight: 3397,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__qg2BK)}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__bh0Ce)}
                loading={"lazy"}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__rf3D)}
                />
              </div>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__kzWds)}>
              <h2
                data-plasmic-name={"h2"}
                data-plasmic-override={overrides.h2}
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2
                )}
              >
                {"About"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__erJxD
                )}
              >
                {
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."
                }
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___5RYbb)}>
              <Stack__
                as={"div"}
                data-plasmic-name={"columns"}
                data-plasmic-override={overrides.columns}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns)}
              >
                <div className={classNames(projectcss.all, sty.column__i5ZBp)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__b8H3U)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__nOWF)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_eat_landing/images/image6.png",
                        fullWidth: 452,
                        fullHeight: 964,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__b2Vjt)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__gsWb9
                      )}
                    >
                      {"Product name"}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___71Wdf
                      )}
                    >
                      {"$ 8.99"}
                    </div>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__ot2Uh
                      )}
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___2Xjw
                        )}
                      >
                        {"Buy Now"}
                      </div>
                    </Button>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column___1NAn9)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___9ZiUm)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__b77Si)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_eat_landing/images/image6.png",
                        fullWidth: 452,
                        fullHeight: 964,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__r7BZj)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__yuZoU
                      )}
                    >
                      {"Product name"}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4Qxm
                      )}
                    >
                      {"$ 8.99"}
                    </div>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__qenJz
                      )}
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vKFo0
                        )}
                      >
                        {"Buy Now"}
                      </div>
                    </Button>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__z5MEg)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___2PmK)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__blMJz)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_eat_landing/images/image6.png",
                        fullWidth: 452,
                        fullHeight: 964,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ulr0X)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__a82D
                      )}
                    >
                      {"Product name"}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zyAEy
                      )}
                    >
                      {"$ 8.99"}
                    </div>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___2IorT
                      )}
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wQyw9
                        )}
                      >
                        {"Buy Now"}
                      </div>
                    </Button>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__ejcjr)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__aKj0H)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__h2EVn)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"158px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_eat_landing/images/image7.png",
                        fullWidth: 818,
                        fullHeight: 1074,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__u3O8)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__lcSr3
                      )}
                    >
                      {"Product name"}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1LOf
                      )}
                    >
                      {"$ 8.99"}
                    </div>
                    <Button
                      className={classNames("__wab_instance", sty.button__sIlU)}
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zrDp
                        )}
                      >
                        {"Buy Now"}
                      </div>
                    </Button>
                  </div>
                </div>
              </Stack__>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__dPubz)}>
              <div className={classNames(projectcss.all, sty.freeBox__bJZg)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__uza5Y)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__lJby5)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__bj9Up)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lG6XG
                        )}
                      >
                        {
                          '"A sem a velit consequat a torquent posuere nibh consectetur ac sodales mi vulputate imperdiet suspendisse a adipiscing felis convallis est tristique faucibus condimentum ante viverra."'
                        }
                      </div>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__x5B8B
                        )}
                      >
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__wdzoz)}
                          role={"img"}
                        />

                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__zJhL)}
                          role={"img"}
                        />

                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__mtlAc)}
                          role={"img"}
                        />

                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__ydjgw)}
                          role={"img"}
                        />

                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__nOz8M)}
                          role={"img"}
                        />
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fSK
                        )}
                      >
                        {"Jack M."}
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ipGmj)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__dur1Z)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gTvt0
                        )}
                      >
                        {
                          '"A sem a velit consequat a torquent posuere nibh consectetur ac sodales mi vulputate imperdiet suspendisse a adipiscing felis convallis est tristique faucibus condimentum ante viverra."'
                        }
                      </div>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__u4Fny
                        )}
                      >
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__bLt23)}
                          role={"img"}
                        />

                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__qtJvY)}
                          role={"img"}
                        />

                        <Icon4Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___7MyTj
                          )}
                          role={"img"}
                        />

                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__nDfAd)}
                          role={"img"}
                        />

                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__ytUeb)}
                          role={"img"}
                        />
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__m0NXs
                        )}
                      >
                        {"Jack M."}
                      </div>
                    </Stack__>
                  </Stack__>
                </Stack__>
              </div>
            </div>
            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "h1", "h2", "columns", "footer"],
  h1: ["h1"],
  h2: ["h2"],
  columns: ["columns"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  h1: "h1";
  h2: "h2";
  columns: "div";
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHome__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHome__VariantsArgs;
    args?: PlasmicHome__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHome__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHome__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHome__ArgProps,
          internalVariantPropNames: PlasmicHome__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h1: makeNodeComponent("h1"),
    h2: makeNodeComponent("h2"),
    columns: makeNodeComponent("columns"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
